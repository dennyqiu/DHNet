@using Angle.Models
@{
    ViewBag.Title = "Index";
    var values = Enum.GetValues(typeof(HighchartTypeEnum)).Cast<HighchartTypeEnum>();
    var items = from value in values
                select new SelectListItem { Text = value.ToString(), Value = value.ToString(), Selected = value == HighchartTypeEnum.混合型 };
    ViewBag.ddlChartType = items;

}


@*<script src="../../Vendor/Highcharts-4.2.6/js/highcharts.js" type="text/javascript"></script>
<script src="../../Vendor/Highcharts-4.2.6/js/modules/exporting.js" type="text/javascript"></script>
<script src="../../Vendor/Highcharts-4.2.6/js/highcharts-more.js" type="text/javascript"></script>*@
<h2>
    HighChart Demo Gallary
</h2>
@Html.Label("请选择图标：")
@Html.DropDownList("ddlChartType")
@*<%=Html.Label("请选择图标：") %><%=Html.DropDownList("ddlChartType", new List<SelectListItem>
    () {
    new SelectListItem() { Text = "混合型", Value=((int)HighchartTypeEnum.混合型).ToString(), Selected=true },
    new SelectListItem() { Text = "饼图型", Value=((int)HighchartTypeEnum.饼图型).ToString() },
    new SelectListItem() { Text = "柱状图", Value=((int)HighchartTypeEnum.柱状图).ToString() },
    new SelectListItem() { Text = "多柱状图", Value=((int)HighchartTypeEnum.多柱状图).ToString() },
    new SelectListItem() { Text = "多流线图", Value=((int)HighchartTypeEnum.多流线图).ToString() },
    new SelectListItem() { Text = "多横柱图", Value=((int)HighchartTypeEnum.多横柱图).ToString() },
    new SelectListItem() { Text = "层叠图", Value=((int)HighchartTypeEnum.层叠图).ToString() },
    new SelectListItem() { Text = "区域图", Value=((int)HighchartTypeEnum.区域图).ToString() },
    new SelectListItem() { Text = "温度计型", Value=((int)HighchartTypeEnum.温度计型).ToString() },
    }, null, new { @Onchange = "javascript:chartChangeEvent()" })%>*@

@*@Html.DropDownList("ddlChartType", new List<SelectListItem>
    () {
    new SelectListItem() { Text = "混合型".ToString(), Selected=true },
    new SelectListItem() { Text = "饼图型".ToString() },
    new SelectListItem() { Text = "柱状图".ToString() },
    new SelectListItem() { Text = "多柱状图".ToString() },
    new SelectListItem() { Text = "多流线图".ToString() },
    new SelectListItem() { Text = "多横柱图".ToString() },
    new SelectListItem() { Text = "层叠图".ToString() },
    new SelectListItem() { Text = "区域图".ToString() },
    new SelectListItem() { Text = "温度计型".ToString() },
     })*@

<div id="highChartContainer" class="mtop10">
    <label id="highChartLabel"></label>
    <div id="highChartDiv">
    </div>
    <span id="resultInfo" style="margin-left: 20px"></span>
</div>


<script language="javascript" type="text/javascript">
    $(document).ready(function () {
        drawChart();
    })

    //初始化图标
    var drawChart = function () {
        $.ajax({
            url: "/Highchart/GetHighChartOptions",
            type: "post",
            data: { "type": $("#ddlChartType").find("option:selected").val() },
            dataType: "json",
            success: function (data) {
                $("#highChartLabel").text(data.label);
                draw(data.value);
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert(errorThrown);
            }
        });
    }

    //change事件
    $(document).ready(function () {
        $("#ddlChartType").change(function () { drawChart(); });
    })

    function init() {
        $("select[name='ddlChartType']").change(function () {
            var selectedProvince = $(this).val();
            alert(selectedProvince);
            drawChart();

        });
    }

    var chartChangeEvent = function () {
        drawChart();
    }

    //绘图方法
    var draw = function (chartOptions) {
        var chart = new Highcharts.Chart({
            chart: chartOptions.chart,
            title: chartOptions.title,
            subtitle: chartOptions.subtitle,
            credits: chartOptions.credits,
            xAxis: chartOptions.xAxis,
            yAxis: chartOptions.yAxis,
            tooltip: chartOptions.tooltip,
            plotOptions: {
                pie: {
                    cursor: chartOptions.plotOptions.cursor
                },
                spline: {
                    stickyTracking: true
                },
                series: {
                    stacking: chartOptions.plotOptions.stacking,
                    point: {
                        events: {
                            mouseOver: function () {
                                $("#resultInfo").html("Category值：" + this.category + " X值：" + this.x + " Y值：" + this.y);
                            },
                            mouseOut: function () {
                                $("#resultInfo").empty();
                            }
                        }
                    },
                    marker: {
                        states: {
                            select: {
                                fillColor: "red",
                                lineWidth: 0
                            }
                        }
                    }
                },
                allowPointSelect: true
            },
            series: chartOptions.series,
            exporting: chartOptions.exporting
        });
    }
</script>
@section Scripts {
        @Scripts.Render("~/bundles/jquery")
        @Scripts.Render("~/bundles/highcharts")
    }
